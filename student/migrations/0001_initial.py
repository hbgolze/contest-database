# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-10-12 02:22
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('randomtest', '0076_auto_20170925_1952'),
        ('teacher', '0009_auto_20171011_2122'),
    ]

    operations = [
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(blank=True, max_length=50)),
                ('response_code', models.TextField(blank=True)),
                ('display_response', models.TextField(blank=True)),
                ('attempted', models.BooleanField(default=0)),
                ('stickied', models.BooleanField(default=0)),
                ('order', models.IntegerField(default=0)),
                ('points', models.IntegerField(default=0)),
                ('point_value', models.IntegerField(default=1)),
                ('is_graded', models.BooleanField(default=0)),
                ('modified_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('problem_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teacher.ProblemObject')),
                ('question_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='randomtest.QuestionType')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UserClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points', models.IntegerField()),
                ('points_earned', models.IntegerField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teacher.PublishedClass')),
                ('userprofile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userclasses', to='randomtest.UserProfile')),
            ],
            options={
                'ordering': ['date_created'],
            },
        ),
        migrations.CreateModel(
            name='UserProblemSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points', models.IntegerField()),
                ('points_earned', models.IntegerField()),
                ('order', models.IntegerField(default=0)),
                ('problemset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teacher.ProblemSet')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UserUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points', models.IntegerField()),
                ('points_earned', models.IntegerField()),
                ('order', models.IntegerField(default=0)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teacher.Unit')),
                ('user_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.UserClass')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='userproblemset',
            name='user_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.UserUnit'),
        ),
        migrations.AddField(
            model_name='response',
            name='user_problemset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.UserProblemSet'),
        ),
    ]
