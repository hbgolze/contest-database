# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-09-26 00:52
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('randomtest', '0075_remove_userprofile_handouts'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='ExampleProblem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=150)),
                ('prefix', models.CharField(max_length=20)),
                ('problem_number', models.IntegerField()),
                ('problem_code', models.TextField(blank=True)),
                ('problem_display', models.TextField(blank=True)),
                ('isProblem', models.BooleanField(default=0)),
                ('mc_answer', models.CharField(max_length=1)),
                ('sa_answer', models.CharField(max_length=20)),
                ('answer_A', models.CharField(blank=True, max_length=500)),
                ('answer_B', models.CharField(blank=True, max_length=500)),
                ('answer_C', models.CharField(blank=True, max_length=500)),
                ('answer_D', models.CharField(blank=True, max_length=500)),
                ('answer_E', models.CharField(blank=True, max_length=500)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='example_problem', to=settings.AUTH_USER_MODEL)),
                ('problem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='randomtest.Problem')),
                ('question_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='randomtest.QuestionType')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('point_value', models.IntegerField(default=1)),
                ('problem_code', models.TextField(blank=True)),
                ('problem_display', models.TextField(blank=True)),
                ('isProblem', models.BooleanField(default=0)),
                ('mc_answer', models.CharField(blank=True, max_length=1)),
                ('sa_answer', models.CharField(blank=True, max_length=20)),
                ('answer_A', models.CharField(blank=True, max_length=500)),
                ('answer_B', models.CharField(blank=True, max_length=500)),
                ('answer_C', models.CharField(blank=True, max_length=500)),
                ('answer_D', models.CharField(blank=True, max_length=500)),
                ('answer_E', models.CharField(blank=True, max_length=500)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='problem_object', to=settings.AUTH_USER_MODEL)),
                ('problem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='randomtest.Problem')),
                ('question_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='randomtest.QuestionType')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('default_point_value', models.IntegerField(default=1)),
                ('problem_objects', models.ManyToManyField(blank=True, to='teacher.ProblemObject')),
            ],
        ),
        migrations.CreateModel(
            name='Proof',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(max_length=20)),
                ('proof_code', models.TextField(blank=True)),
                ('proof_display', models.TextField(blank=True)),
                ('isSolution', models.BooleanField(default=0)),
                ('solution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='randomtest.Solution')),
            ],
        ),
        migrations.CreateModel(
            name='PublishedClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('enrolled_students', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Slide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SlideGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='SlideObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('slide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slide_objects', to='teacher.Slide')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TextBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_code', models.TextField(blank=True)),
                ('text_display', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Theorem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=150)),
                ('prefix', models.CharField(max_length=20)),
                ('theorem_number', models.IntegerField()),
                ('theorem_code', models.TextField(blank=True)),
                ('theorem_display', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UnitObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_objects', to='teacher.Unit')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='slide',
            name='slidegroup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slides', to='teacher.SlideGroup'),
        ),
        migrations.AddField(
            model_name='publishedclass',
            name='units',
            field=models.ManyToManyField(blank=True, to='teacher.Unit'),
        ),
        migrations.AddField(
            model_name='class',
            name='units',
            field=models.ManyToManyField(blank=True, to='teacher.Unit'),
        ),
    ]
